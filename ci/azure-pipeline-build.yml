trigger:
  - azure-pipeline-test


variables:
  package_name: ClusterSheep
  build_requirements_file: ci/build-requirements.txt
  test_requirements_file: ci/test-requirements.txt


jobs:

#- job: LinuxSDist
#  pool:
#    vmImage: 'ubuntu-latest'
#  variables:
#    python.architecture: 'none'
#  steps:
#    - task: UsePythonVersion@0
#      inputs:
#        versionSpec: '3.8'
#    - script: |
#        set -x
#        python -m pip install --upgrade pip
#        python -m pip install setuptools
#        python -m pip install -r $(build_requirements_file)
#      displayName: Install sdist dependencies
#    - script: python setup.py sdist
#      displayName: Prepare sdist

- job: ManyLinux
  strategy:
    matrix:
#      64Bit2010:
#        arch: x86_64
#        plat: manylinux2010_x86_64
#        image: quay.io/pypa/manylinux2010_x86_64
#        python.architecture: x64
      64Bit:
        arch: x86_64
        plat: manylinux1_x86_64
        image: quay.io/pypa/manylinux1_x86_64
        python.architecture: x64
  pool:
    vmImage: 'ubuntu-latest'
  steps:
    - script: |
        set +x
        ls -al ci/build-wheels.sh && chmod +x ci/build-wheels.sh && ci/build-wheels.sh
        docker run --rm \
          -e NPY_NUM_BUILD_JOBS=4 \
          -e PLAT=$(plat) \
          -e package_name=$(package_name) \
          -e build_requirements_file='$(build_requirements_file)' \
          -e test_requirements_file='$(test_requirements_file)' \
          -v $PWD:/io \
          $(image) \
          ls -al /io/ci/build-wheels.sh && sh /io/ci/build-wheels.sh
      displayName: Build wheels
    - script: |
        ls -lh wheelhouse/
        mkdir -p dist
        cp wheelhouse/$(package_name)*.whl dist/.
      displayName: Show and copy wheels